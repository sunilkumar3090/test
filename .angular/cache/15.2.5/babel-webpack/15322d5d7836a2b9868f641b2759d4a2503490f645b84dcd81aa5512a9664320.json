{"ast":null,"code":"import { createReducer, createSelector, on } from '@ngrx/store';\nimport * as UserActions from './users.actions';\nexport const userFeatureKey = 'user';\nexport const initialState = {\n  users: [],\n  loading: false,\n  error: null\n};\nexport const selectUsers = createSelector(state => state.users, users => users);\nexport const userReducer = createReducer(initialState, on(UserActions.loadUsers, state => ({\n  ...state,\n  loading: true,\n  error: null\n})), on(UserActions.loadUsersSuccess, (state, {\n  users\n}) => ({\n  ...state,\n  users,\n  loading: false,\n  error: null\n})), on(UserActions.loadUsersFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: false,\n  error\n})), on(UserActions.updateUsers, (state, {\n  users\n}) => ({\n  ...state,\n  users,\n  loading: false,\n  error: null\n})));","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,cAAc,EAAEC,EAAE,QAAQ,aAAa;AAC/D,OAAO,KAAKC,WAAW,MAAM,iBAAiB;AAE9C,OAAO,MAAMC,cAAc,GAAG,MAAM;AAQpC,OAAO,MAAMC,YAAY,GAAc;EACrCC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACR;AAED,OAAO,MAAMC,WAAW,GAAGR,cAAc,CAClCS,KAAgB,IAAKA,KAAK,CAACJ,KAAK,EAChCA,KAAa,IAAKA,KAAK,CAC7B;AAED,OAAO,MAAMK,WAAW,GAAGX,aAAa,CACtCK,YAAY,EAEZH,EAAE,CAACC,WAAW,CAACS,SAAS,EAAGF,KAAK,KAAM;EACpC,GAAGA,KAAK;EACRH,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;CACR,CAAC,CAAC,EAEHN,EAAE,CAACC,WAAW,CAACU,gBAAgB,EAAE,CAACH,KAAK,EAAE;EAAEJ;AAAK,CAAE,MAAM;EACtD,GAAGI,KAAK;EACRJ,KAAK;EACLC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACR,CAAC,CAAC,EAEHN,EAAE,CAACC,WAAW,CAACW,gBAAgB,EAAE,CAACJ,KAAK,EAAE;EAAEF;AAAK,CAAE,MAAM;EACtD,GAAGE,KAAK;EACRH,OAAO,EAAE,KAAK;EACdC;CACD,CAAC,CAAC,EACHN,EAAE,CAACC,WAAW,CAACY,WAAW,EAAE,CAACL,KAAK,EAAG;EAAEJ;AAAK,CAAE,MAAO;EACjD,GAAGI,KAAK;EACRJ,KAAK;EACLC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACR,CAAC,CAAC,CACN","names":["createReducer","createSelector","on","UserActions","userFeatureKey","initialState","users","loading","error","selectUsers","state","userReducer","loadUsers","loadUsersSuccess","loadUsersFailure","updateUsers"],"sourceRoot":"","sources":["/Users/suneelkraguru/Downloads/interview-starter/src/app/_state/users/users.reducer.ts"],"sourcesContent":["import { createReducer, createSelector, on } from '@ngrx/store';\nimport * as UserActions from './users.actions';\nimport { User } from './users-store';\nexport const userFeatureKey = 'user';\n\nexport interface UserState {\n  users: User[];\n  loading: boolean;\n  error: any;\n}\n\nexport const initialState: UserState = {\n  users: [],\n  loading: false,\n  error: null,\n};\n\nexport const selectUsers = createSelector(\n      (state: UserState) => state.users,\n      (users: User[]) => users\n);\n\nexport const userReducer = createReducer(\n  initialState,\n\n  on(UserActions.loadUsers, (state) => ({\n    ...state,\n    loading: true,\n    error: null,\n  })),\n\n  on(UserActions.loadUsersSuccess, (state, { users }) => ({\n    ...state,\n    users,\n    loading: false,\n    error: null,\n  })),\n\n  on(UserActions.loadUsersFailure, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error,\n  })),\n  on(UserActions.updateUsers, (state,  { users } ) => ({\n      ...state,\n      users,\n      loading: false,\n      error: null,\n    })),\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}