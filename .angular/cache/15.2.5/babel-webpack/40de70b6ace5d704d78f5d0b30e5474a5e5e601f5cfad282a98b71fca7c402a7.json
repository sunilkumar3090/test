{"ast":null,"code":"import { createEntityAdapter } from \"@ngrx/entity\";\nimport { createActionGroup, createFeature, emptyProps, props } from \"@ngrx/store\";\nimport { userReducer } from \"./users.reducer\";\nconst UsersStoreKey = \"users\";\nconst usersAdapter = createEntityAdapter();\nconst initialState = usersAdapter.getInitialState({\n  selectedUserId: null,\n  users: null\n});\nexport const UsersActions = createActionGroup({\n  source: UsersStoreKey,\n  events: {\n    Init: emptyProps(),\n    'Save Initial Users': props()\n  }\n});\nexport const UsersReducer = createFeature({\n  name: UsersStoreKey,\n  reducer: userReducer\n});","map":{"version":3,"mappings":"AAAA,SAAqCA,mBAAmB,QAAQ,cAAc;AAC9E,SAASC,iBAAiB,EAAEC,aAAa,EAAiBC,UAAU,EAAEC,KAAK,QAAQ,aAAa;AAChG,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,MAAMC,aAAa,GAAG,OAAO;AAoB7B,MAAMC,YAAY,GAAwBP,mBAAmB,EAAQ;AAErE,MAAMQ,YAAY,GAAeD,YAAY,CAACE,eAAe,CAAC;EAC1DC,cAAc,EAAE,IAAI;EACpBC,KAAK,EAAC;CACT,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGX,iBAAiB,CAAC;EAC1CY,MAAM,EAAEP,aAAa;EACrBQ,MAAM,EAAE;IACJC,IAAI,EAAEZ,UAAU,EAAE;IAClB,oBAAoB,EAAEC,KAAK;;CAElC,CAAC;AAEF,OAAO,MAAMY,YAAY,GAAGd,aAAa,CAAC;EACtCe,IAAI,EAAEX,aAAa;EACnBY,OAAO,EAAEb;CACZ,CAAC","names":["createEntityAdapter","createActionGroup","createFeature","emptyProps","props","userReducer","UsersStoreKey","usersAdapter","initialState","getInitialState","selectedUserId","users","UsersActions","source","events","Init","UsersReducer","name","reducer"],"sourceRoot":"","sources":["/Users/suneelkraguru/Downloads/interview-starter/src/app/_state/users/users-store.ts"],"sourcesContent":["import { EntityAdapter, EntityState, createEntityAdapter } from \"@ngrx/entity\";\nimport { createActionGroup, createFeature, createReducer, emptyProps, props } from \"@ngrx/store\";\nimport { userReducer } from \"./users.reducer\";\n\nconst UsersStoreKey = \"users\";\n\nexport interface User {\n    id: string;\n    firstName: string;\n    lastName: string;\n    maidenName: string;\n    age: number;\n    gender: string;\n    email: string;\n    phone: string;\n    birthDate: string;\n    editing?: boolean; // flag to indicate if the user is being edited\n    editingUser?: User | null; // copy of the user when editing started\n}\n\nexport interface UsersState extends EntityState<User> {\n    selectedUserId: string | null;\n}\n\nconst usersAdapter: EntityAdapter<User> = createEntityAdapter<User>();\n\nconst initialState: UsersState = usersAdapter.getInitialState({\n    selectedUserId: null,\n    users:null\n});\n\nexport const UsersActions = createActionGroup({\n    source: UsersStoreKey,\n    events: {\n        Init: emptyProps(),\n        'Save Initial Users': props<{ users: User[] }>(),\n    }\n});\n\nexport const UsersReducer = createFeature({\n    name: UsersStoreKey,\n    reducer: userReducer\n});\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}