{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@angular/common/http\";\nexport class UserEffects {\n  constructor(actions$, http) {\n    this.actions$ = actions$;\n    this.http = http;\n    this.loadUsers$ = createEffect(() => this.actions$.pipe(ofType(loadUsers), switchMap(() => this.http.get('https://dummyjson.com/users').pipe(map(response => {\n      const users = response.map(user => ({\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        phone: user.phone\n      }));\n      return loadUsersSuccess({\n        users\n      });\n    }), catchError(error => of(loadUsersFailure({\n      error\n    })))))));\n  }\n}\nUserEffects.ɵfac = function UserEffects_Factory(t) {\n  return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpClient));\n};\nUserEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserEffects,\n  factory: UserEffects.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,SAAS,EAAEC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;AAC3D,SAASC,EAAE,QAAQ,MAAM;;;;AAGzB,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,QAAiB,EAAUC,IAAgB;IAA3C,aAAQ,GAARD,QAAQ;IAAmB,SAAI,GAAJC,IAAI;IAEnD,eAAU,GAAGT,YAAY,CAAC,MACxB,IAAI,CAACQ,QAAQ,CAACE,IAAI,CAChBT,MAAM,CAACU,SAAS,CAAC,EACjBT,SAAS,CAAC,MACR,IAAI,CAACO,IAAI,CAACG,GAAG,CAAQ,6BAA6B,CAAC,CAACF,IAAI,CACtDP,GAAG,CAAEU,QAAQ,IAAI;MACf,MAAMC,KAAK,GAAGD,QAAQ,CAACV,GAAG,CAAEY,IAAI,KAAM;QACpCC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,KAAK,EAAEJ,IAAI,CAACI;OACb,CAAC,CAAC;MACH,OAAOC,gBAAgB,CAAC;QAAEN;MAAK,CAAE,CAAC;IACpC,CAAC,CAAC,EACFV,UAAU,CAAEiB,KAAK,IAAKhB,EAAE,CAACiB,gBAAgB,CAAC;MAAED;IAAK,CAAE,CAAC,CAAC,CAAC,CACvD,CACF,CACF,CACF;EApBiE;;AADvDf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;AAAA","names":["createEffect","ofType","switchMap","map","catchError","of","UserEffects","constructor","actions$","http","pipe","loadUsers","get","response","users","user","id","name","email","phone","loadUsersSuccess","error","loadUsersFailure","factory"],"sourceRoot":"","sources":["/Users/suneelkraguru/Downloads/interview-starter/src/app/_state/users/users.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable()\nexport class UserEffects {\n  constructor(private actions$: Actions, private http: HttpClient) {}\n\n  loadUsers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadUsers),\n      switchMap(() =>\n        this.http.get<any[]>('https://dummyjson.com/users').pipe(\n          map((response) => {\n            const users = response.map((user) => ({\n              id: user.id,\n              name: user.name,\n              email: user.email,\n              phone: user.phone,\n            }));\n            return loadUsersSuccess({ users });\n          }),\n          catchError((error) => of(loadUsersFailure({ error })))\n        )\n      )\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}